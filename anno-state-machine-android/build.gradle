apply plugin: 'com.android.library'
apply plugin: "com.jfrog.bintray"
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven'

Properties localProps = new Properties();
localProps.load(project.rootProject.file('local.properties').newDataInputStream())

group = 'com.jayway.annostatemachine'
version = androidLibVersion

def siteUrl = 'https://github.com/maxringstrom/anno-state-machine'
def gitUrl = 'https://github.com/maxringstrom/anno-state-machine.git'   // Git repository URL

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'com.jayway.annostatemachine'
                description = 'Android specific version of Anno State Machine'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'maxringstrom'
                        name 'Max Ringstr√∂m'
                        email 'maxringstrom@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

bintray {
    user = localProps.hasProperty('bintrayUser') ? localProps.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = localProps.hasProperty('bintrayApiKey') ? localProps.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'anno-state-machine-android'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = gitUrl
        version {
            name = androidLibVersion
            desc = 'Anno State Machine addons for Android'
            vcsTag = 'android-' + androidLibVersion
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2017'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    testCompile 'junit:junit:4.12'

    annotationProcessor project(path: ':anno-state-machine-processor')
    api project(path: ':anno-state-machine')
}
